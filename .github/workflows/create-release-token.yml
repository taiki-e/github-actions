# Create a new GitHub release and run `cargo publish` (with API token at `secrets.CARGO_REGISTRY_TOKEN`).
#
# Note: It is recommended to use create-release.yml rather than this workflow,
# but cases like the initial publish requires this workflow.
#
# Setup:
#
# 1. Visit https://crates.io/settings/tokens
#    and create an API token with "publish-new" scope.
#
# 2. Visit https://github.com/<owner>/<repo>/settings/environments
#    and create "release" environment.
#
#    Then create a environment secret named "CARGO_REGISTRY_TOKEN"
#    with the API token created above.
#
# 3. Visit https://github.com/<owner>/<repo>/settings/actions
#    and add the followings to allowed actions (if only selected actions are allowed):
#
#    taiki-e/*,
#
# Post Publish:
#
# - Switch to use create-release.yml
#   and remove the API token and environment secret created above.
#
# Usage:
#
# ```yml
#   create-release:
#     if: github.repository_owner == '<owner>'
#     uses: taiki-e/github-actions/.github/workflows/create-release-token.yml@main
#     permissions:
#       contents: write # for taiki-e/create-gh-release-action
#     secrets: inherit
# ```
#
# See "on.workflow_call.inputs" below for input options.

permissions:
  contents: read

on:
  workflow_call:
    inputs:
      rust:
        required: false
        type: string
        default: stable
      target:
        required: false
        type: string
      args:
        required: false
        type: string
      crates:
        required: false
        type: string
        default: '.'
      changelog:
        required: false
        type: string
        default: CHANGELOG.md
      title:
        required: false
        type: string
        default: $version
      branch:
        required: false
        type: string
        default: main
    secrets:
      CARGO_REGISTRY_TOKEN:
        required: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash --noprofile --norc -CeEuo pipefail {0}

jobs:
  create-release:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    environment: release
    permissions:
      contents: write # for taiki-e/create-gh-release-action
    steps:
      - uses: taiki-e/checkout-action@v1
      - uses: taiki-e/github-actions/install-rust@main
        with:
          toolchain: ${{ inputs.rust }}
          target: ${{ inputs.target }}
      - run: |
          printf '%s\n' "TARGET=--target=${{ inputs.target }}" >>"${GITHUB_ENV}"
        if: inputs.target != ''
      - run: |
          crates=()
          while read -rd,; do
            crates+=("${REPLY}")
          done <<<"${{ inputs.crates }},"
          for i in "${!crates[@]}"; do
            (
              set -x
              cd -- "${crates[${i}]}"
              cargo build ${TARGET:-} ${{ inputs.args }}
            )
          done
      - uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: ${{ inputs.changelog }}
          title: ${{ inputs.title }}
          branch: ${{ inputs.branch }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          crates=()
          while read -rd,; do
            crates+=("${REPLY}")
          done <<<"${{ inputs.crates }},"
          for i in "${!crates[@]}"; do
            (
              set -x
              cd -- "${crates[${i}]}"
              # TODO: retry on failure
              # TODO: handle already published case: https://github.com/rust-lang/cargo/blob/0.80.0/publish.py#L35
              # TODO: use multi-package publishing: https://github.com/rust-lang/cargo/pull/15636
              cargo publish ${TARGET:-} ${{ inputs.args }}
            )
            if [[ $((i + 1)) != "${#crates[@]}" ]]; then
              sleep 45 # cargo's waiting is sometimes not enough
            fi
          done
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
