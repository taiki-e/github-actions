permissions:
  contents: read

on:
  workflow_call:
    inputs:
      rust:
        required: false
        type: string
        default: nightly
      target:
        required: false
        type: string
      args:
        required: false
        type: string
      all-features:
        required: false
        type: boolean
        default: true
      miriflags:
        required: false
        type: string
        default: -Zmiri-strict-provenance -Zmiri-symbolic-alignment-check -Zmiri-disable-isolation

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10
  # Reusable workflows cannot inherit environment variables.
  ATOMIC_MAYBE_UNINIT_DENY_WARNINGS: 1
  CARGO_HACK_DENY_WARNINGS: 1
  CARGO_LLVM_COV_DENY_WARNINGS: 1
  CARGO_MINIMAL_VERSIONS_DENY_WARNINGS: 1
  CARGO_NO_DEV_DEPS_DENY_WARNINGS: 1
  CONST_FN_DENY_WARNINGS: 1
  PORTABLE_ATOMIC_DENY_WARNINGS: 1
  SEMIHOSTING_DENY_WARNINGS: 1

defaults:
  run:
    shell: bash --noprofile --norc -CeEuo pipefail {0}

jobs:
  miri:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: taiki-e/checkout-action@v1
      - uses: taiki-e/github-actions/install-rust@main
        with:
          toolchain: ${{ inputs.rust }}
          component: miri
      - run: |
          printf '%s\n' "TARGET=--target=${{ inputs.target }}" >>"${GITHUB_ENV}"
        if: inputs.target != ''
      - run: |
          printf 'ALL_FEATURES=--all-features\n' >>"${GITHUB_ENV}"
        if: inputs.all-features && !contains(inputs.args, '--features') && !contains(inputs.args, '--no-default-features')
      - run: cargo miri test --workspace ${TARGET:-} ${ALL_FEATURES:-} ${{ inputs.args }}
        env:
          MIRIFLAGS: ${{ inputs.miriflags }}
          RUSTDOCFLAGS: ${{ env.RUSTDOCFLAGS }} -Z randomize-layout
          RUSTFLAGS: ${{ env.RUSTFLAGS }} -Z randomize-layout
