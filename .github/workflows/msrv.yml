permissions:
  contents: read

on:
  workflow_call:
    inputs:
      event_name:
        required: false
        type: string
      target:
        required: false
        type: string
        default: x86_64-unknown-linux-gnu,x86_64-pc-windows-msvc
      args:
        required: false
        type: string
      all-features:
        required: false
        type: boolean
        default: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10
  # Reusable workflows cannot inherit environment variables.
  ATOMIC_MAYBE_UNINIT_DENY_WARNINGS: 1
  CARGO_HACK_DENY_WARNINGS: 1
  CARGO_LLVM_COV_DENY_WARNINGS: 1
  CARGO_MINIMAL_VERSIONS_DENY_WARNINGS: 1
  CARGO_NO_DEV_DEPS_DENY_WARNINGS: 1
  CONST_FN_DENY_WARNINGS: 1
  PORTABLE_ATOMIC_DENY_WARNINGS: 1
  SEMIHOSTING_DENY_WARNINGS: 1

defaults:
  run:
    shell: bash --noprofile --norc -CeEuo pipefail {0}

jobs:
  msrv:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: taiki-e/checkout-action@v1
      - uses: taiki-e/github-actions/free-device-space@main
      - uses: taiki-e/install-action@cargo-hack
      - run: |
          printf 'ALL_FEATURES=--all-features\n' >>"${GITHUB_ENV}"
        if: inputs.all-features && !contains(inputs.args, '--features') && !contains(inputs.args, '--no-default-features')
      # Make sure this crate can be built with MSRV and all later versions.
      # However, this takes time, so for PR, set the version interval.
      - run: |
          # shellcheck disable=SC2206
          args=(${{ inputs.args }})
          if [[ "${{ inputs.event_name }}" == 'pull_request' ]]; then
            args+=(--version-step 2)
          fi
          IFS=$'\n\t'
          # Handle target inputs.
          input_target="${{ inputs.target }}"
          if [[ -n "${input_target}" ]]; then
            while read -rd,; do
              args+=(--target="${REPLY}")
            done <<<"${input_target},"
          fi
          cargo hack build --workspace --no-private --no-dev-deps --version-range .. ${ALL_FEATURES:-} "${args[@]}"
